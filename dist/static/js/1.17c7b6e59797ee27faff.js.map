{"version":3,"sources":["webpack:///src/components/canvas/particles.vue","webpack:///./src/components/canvas/particles.vue?db1e","webpack:///./src/components/canvas/particles.vue"],"names":["particles","_this","this","canvasBox","canvasWrap","canvasObj","canvas","element","getContext","event","clientX","clientY","undefined","clientWidth","clientHeight","context","point","height","beginPath","width","vx","vy","mouse","closePath","p","dist","x","Math","round","points","i","y","j","max_con","stroke","canvasInit","canvas_particles","render","_h","$createElement","_c","_self","ref","staticClass","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"qGAMA,IAAAA,QAEA,sEAOA,IAAAC,EAAAC,8BAEAC,uBACAC,sBAEAC,6BAIA,WACA,mBACA,iBACA,iBACA,mBACA,iCACA,mEAXA,IAAAC,EAAAC,QAAAC,WAAA,aAsBA,oCAFA,wBAMAD,oEAEAA,sEAGAE,mBAEAC,YAEAC,mEAKAC,uCAKAN,IACA,mEAIA,sCACA,qFACAO,iGACAC,4CAIAC,QACAC,OAAA,4CACAC,UACAC,8CACA,kHAKAC,4CACAF,gDACAG,2CAEAC,iCAGAf,iFAEAW,oBACAD,sBAEAM,SACAC,6CAIAP,+CAEAI,UACAA,2CAEAC,UACAA,eAGAD,WACAC,QACAD,QAEAC,IAEAG,gCAIAC,OAAA,SACAV,6CACA,qBAEA,6GAIAW,GAAAC,KAAAC,MAAAtB,EAAAuB,OAAAC,GAAAC,EAAAzB,EAAAuB,OAAAG,GAAAD,GAAAJ,KAAAC,MAAAtB,EAAAuB,OAAAC,GAAAC,EAAAzB,EAAAuB,OAAAG,GACAD,uEAGAE,oCAEAR,mEACA,MACAP,+CACAa,sCACAA,KACAG,sIAOAH,wFAGA,mDACA,qCAGA,kEACA,MACAb,+CACAa,kBACAA,KACAG,sCAOAC,eCnKAC,GADiBC,OAFjB,WAA0B,IAAaC,EAAbpC,KAAaqC,eAA0BC,EAAvCtC,KAAuCuC,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,IAAA,aAAAC,YAAA,cAAyCH,EAAA,UAAeE,IAAA,YAAAC,YAAA,iBAEjJC,oBCCjB,IAcAC,EAdAC,EAAA,OAcAC,CACA/C,EACAoC,GATA,EAVA,SAAAY,GACAF,EAAA,SAaA,kBAEA,MAUAG,EAAA,QAAAJ,EAAA","file":"static/js/1.17c7b6e59797ee27faff.js","sourcesContent":["<template>\r\n  <div class=\"particles\" ref=\"canvasWrap\">\r\n    <canvas class=\"canvasBox\" ref=\"canvasBox\"></canvas>\r\n  </div>\r\n</template>\r\n<script type=\"text/ecmascript-6\">\r\nexport default {\r\n  name: 'particles',\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  methods: {\r\n    // 根据传入的config初始化画布\r\n    canvasInit (canvasConfig) {\r\n      canvasConfig = canvasConfig || {}\r\n      let canvasObj = this.$refs.canvasBox\r\n      let canvasWrap = this.$refs.canvasWrap\r\n      let canvas = {\r\n        element: canvasObj,\r\n        points: [],\r\n        // 默认配置\r\n        config: {\r\n          vx: canvasConfig.vx || 4,\r\n          vy: canvasConfig.vy || 4,\r\n          height: canvasConfig.height || 2,\r\n          width: canvasConfig.width || 2,\r\n          count: canvasConfig.count || 200,\r\n          color: canvasConfig.color || '121, 162, 185',\r\n          stroke: canvasConfig.stroke || '130, 255, 255',\r\n          dist: canvasConfig.dist || 6000, // 点吸附距离,\r\n          e_dist: canvasConfig.e_dist || 20000, // 鼠标吸附加速距离\r\n          max_con: 10 // 点到点最大连接数\r\n        }\r\n      }\r\n\r\n      // 获取context\r\n      if (canvas.element.getContext('2d')) {\r\n        canvas.context = canvas.element.getContext('2d')\r\n      } else {\r\n        return null\r\n      }\r\n\r\n      // 设置canvas大小\r\n      this.canvasSize(canvas.element)\r\n      window.addEventListener('resize', () => {\r\n        this.canvasSize(canvas.element)\r\n      })\r\n      canvasWrap.addEventListener('mousemove', (e) => {\r\n        let event = e || window.event\r\n        canvas.mouse = {\r\n          x: event.clientX,\r\n          y: event.clientY\r\n        }\r\n      })\r\n\r\n      // 鼠标离开\r\n      canvasWrap.addEventListener('mouseleave', () => {\r\n        canvas.mouse = undefined\r\n      })\r\n\r\n      // 动画帧\r\n      setInterval(() => {\r\n        this.drawPoint(canvas)\r\n      }, 40)\r\n    },\r\n    // 设置canvas大小\r\n    canvasSize (canvas) {\r\n      let width = this.$refs.canvasBox.style.width - 0\r\n      let height = this.$refs.canvasBox.style.height - 0\r\n      canvas.width = width || window.innerWeight || document.documentElement.clientWidth || document.body.clientWidth\r\n      canvas.height = height || window.innerWeight || document.documentElement.clientHeight || document.body.clientHeight\r\n    },\r\n    // 画点\r\n    drawPoint (canvas) {\r\n      let context = canvas.context\r\n      let point\r\n      context.clearRect(0, 0, canvas.element.width, canvas.element.height)\r\n      context.beginPath()\r\n      context.fillStyle = 'rgb(' + canvas.config.color + ')'\r\n      for (let i = 0, len = canvas.config.count; i < len; i++) {\r\n        if (canvas.points.length !== canvas.config.count) {\r\n          // 初始化所有点\r\n          point = {\r\n            x: Math.floor(Math.random() * canvas.element.width),\r\n            y: Math.floor(Math.random() * canvas.element.height),\r\n            vx: canvas.config.vx / 2 - Math.random() * canvas.config.vx,\r\n            vy: canvas.config.vy / 2 - Math.random() * canvas.config.vy\r\n          }\r\n        } else {\r\n          // 处理球的速度和位置, 并且做边界处理\r\n          point = this.borderPoint(canvas.points[i], canvas)\r\n        }\r\n        context.fillRect(point.x - canvas.config.width / 2, point.y - canvas.config.height / 2, canvas.config.width, canvas.config.height)\r\n        canvas.points[i] = point\r\n      }\r\n      this.drawLine(context, canvas, canvas.mouse)\r\n      context.closePath()\r\n    },\r\n    // 边界处理\r\n    borderPoint (point, canvas) {\r\n      let p = point\r\n      if (point.x <= 0 || point.x >= canvas.element.width) {\r\n        p.vx = -p.vx\r\n        p.x += p.vx\r\n      } else if (point.y <= 0 || point.y >= canvas.element.height) {\r\n        p.vy = -p.vy\r\n        p.y += p.vy\r\n      } else {\r\n        p = {\r\n          x: p.x + p.vx,\r\n          y: p.y + p.vy,\r\n          vx: p.vx,\r\n          vy: p.vy\r\n        }\r\n      }\r\n      return p\r\n    },\r\n    // 画线\r\n    drawLine (context, canvas, mouse) {\r\n      let dist\r\n      context = context || canvas.context\r\n      for (let i = 0, len = canvas.config.count; i < len; i++) {\r\n        // 初始化最大连接数\r\n        canvas.points[i].max_con = 0\r\n        // point to point\r\n        for (let j = 0; j < len; j++) {\r\n          if (i !== j) {\r\n            dist = Math.round(canvas.points[i].x - canvas.points[j].x) * Math.round(canvas.points[i].x - canvas.points[j].x) +\r\n              Math.round(canvas.points[i].y - canvas.points[j].y) * Math.round(canvas.points[i].y - canvas.points[j].y)\r\n            // 两点距离小于吸附距离，而且小于最大连接数，则画线\r\n            if (dist <= canvas.config.dist && canvas.points[i].max_con < canvas.config.max_con) {\r\n              canvas.points[i].max_con++\r\n              // 距离越远，线条越细，而且越透明\r\n              context.lineWidth = 0.5 - dist / canvas.config.dist\r\n              context.strokeStyle = 'rgba(' + canvas.config.stroke + ',' + (1 - dist / canvas.config.dist) + ')'\r\n              context.beginPath()\r\n              context.moveTo(canvas.points[i].x, canvas.points[i].y)\r\n              context.lineTo(canvas.points[j].x, canvas.points[j].y)\r\n              context.stroke()\r\n            }\r\n          }\r\n        }\r\n        // 如果鼠标进入画布\r\n        // point to mouse\r\n        if (mouse) {\r\n          dist = Math.round(canvas.points[i].x - mouse.x) * Math.round(canvas.points[i].x - mouse.x) + Math.round(canvas.points[i].y - mouse.y) * Math.round(canvas.points[i].y - mouse.y)\r\n          // 遇到鼠标吸附距离时加速，直接改变point的x，y值达到加速效果\r\n          if (dist > canvas.config.dist && dist <= canvas.config.e_dist) {\r\n            canvas.points[i].x = canvas.points[i].x + (mouse.x - canvas.points[i].x) / 20\r\n            canvas.points[i].y = canvas.points[i].y + (mouse.y - canvas.points[i].y) / 20\r\n          }\r\n          if (dist <= canvas.config.e_dist) {\r\n            context.lineWidth = 1\r\n            context.strokeStyle = 'rgba(' + canvas.config.stroke + ',' + (1 - dist / canvas.config.e_dist) + ')'\r\n            context.beginPath()\r\n            context.moveTo(canvas.points[i].x, canvas.points[i].y)\r\n            context.lineTo(mouse.x, mouse.y)\r\n            context.stroke()\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    this.canvasInit()\r\n  }\r\n}\r\n</script>\r\n<style lang=\"stylus\" rel=\"stylesheet/stylus\" scoped>\r\n.particles\r\n  position relative\r\n  top 0\r\n  left 0\r\n  width 100%\r\n  height 100%\r\n  background rgb(0, 0, 0)\r\n  .canvasBox\r\n    position absolute\r\n    top 0\r\n    left 0\r\n    z-index 0\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/canvas/particles.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"canvasWrap\",staticClass:\"particles\"},[_c('canvas',{ref:\"canvasBox\",staticClass:\"canvasBox\"})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-9139e1b6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/canvas/particles.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-9139e1b6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./particles.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./particles.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./particles.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-9139e1b6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./particles.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-9139e1b6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/canvas/particles.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}